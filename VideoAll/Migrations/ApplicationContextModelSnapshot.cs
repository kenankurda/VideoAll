// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VideoAll.Data;

namespace VideoAll.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ActorVideo", b =>
                {
                    b.Property<int>("ActorsActorId")
                        .HasColumnType("int");

                    b.Property<int>("VideosVideoId")
                        .HasColumnType("int");

                    b.HasKey("ActorsActorId", "VideosVideoId");

                    b.HasIndex("VideosVideoId");

                    b.ToTable("ActorVideo");
                });

            modelBuilder.Entity("VideoAll.Models.Actor", b =>
                {
                    b.Property<int>("ActorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DayOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ActorId");

                    b.ToTable("Actors");

                    b.HasData(
                        new
                        {
                            ActorId = 1,
                            DayOfBirth = new DateTime(1961, 5, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Kenan",
                            LastName = "Kurda"
                        },
                        new
                        {
                            ActorId = 2,
                            DayOfBirth = new DateTime(1951, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Bill",
                            LastName = "Gates"
                        },
                        new
                        {
                            ActorId = 3,
                            DayOfBirth = new DateTime(1946, 3, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Anthony",
                            LastName = "Hopkins"
                        });
                });

            modelBuilder.Entity("VideoAll.Models.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenreId");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            GenreId = 1,
                            Name = "Action"
                        },
                        new
                        {
                            GenreId = 2,
                            Name = "Comedy"
                        },
                        new
                        {
                            GenreId = 3,
                            Name = "Action-Comedy"
                        },
                        new
                        {
                            GenreId = 4,
                            Name = "Romance"
                        });
                });

            modelBuilder.Entity("VideoAll.Models.Video", b =>
                {
                    b.Property<int>("VideoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VideoId");

                    b.HasIndex("GenreId");

                    b.ToTable("Videos");

                    b.HasData(
                        new
                        {
                            VideoId = 1,
                            GenreId = 0,
                            ImagePath = "some path",
                            Name = "Bad Boys"
                        },
                        new
                        {
                            VideoId = 2,
                            GenreId = 0,
                            ImagePath = "some path",
                            Name = "Indiana Jones"
                        },
                        new
                        {
                            VideoId = 3,
                            GenreId = 0,
                            ImagePath = "some path",
                            Name = "Alaska"
                        });
                });

            modelBuilder.Entity("ActorVideo", b =>
                {
                    b.HasOne("VideoAll.Models.Actor", null)
                        .WithMany()
                        .HasForeignKey("ActorsActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VideoAll.Models.Video", null)
                        .WithMany()
                        .HasForeignKey("VideosVideoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VideoAll.Models.Video", b =>
                {
                    b.HasOne("VideoAll.Models.Genre", "Genres")
                        .WithMany("Videos")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genres");
                });

            modelBuilder.Entity("VideoAll.Models.Genre", b =>
                {
                    b.Navigation("Videos");
                });
#pragma warning restore 612, 618
        }
    }
}
